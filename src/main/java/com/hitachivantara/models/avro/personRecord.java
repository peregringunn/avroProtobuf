/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hitachivantara.models.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class personRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8699089091213491262L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"personRecord\",\"namespace\":\"com.hitachivantara.avro\",\"fields\":[{\"name\":\"bioguideid\",\"type\":\"string\"},{\"name\":\"birthday\",\"type\":\"string\"},{\"name\":\"cspanid\",\"type\":\"string\"},{\"name\":\"firstname\",\"type\":\"string\"},{\"name\":\"gender\",\"type\":\"string\"},{\"name\":\"gender_label\",\"type\":\"string\"},{\"name\":\"lastname\",\"type\":\"string\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"middlename\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"namemod\",\"type\":\"string\"},{\"name\":\"nickname\",\"type\":\"string\"},{\"name\":\"osid\",\"type\":\"string\"},{\"name\":\"pvsid\",\"type\":\"string\"},{\"name\":\"sortname\",\"type\":\"string\"},{\"name\":\"twiterid\",\"type\":\"string\"},{\"name\":\"youtubeid\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<personRecord> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<personRecord> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<personRecord> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<personRecord> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<personRecord> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this personRecord to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a personRecord from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a personRecord instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static personRecord fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence bioguideid;
  private java.lang.CharSequence birthday;
  private java.lang.CharSequence cspanid;
  private java.lang.CharSequence firstname;
  private java.lang.CharSequence gender;
  private java.lang.CharSequence gender_label;
  private java.lang.CharSequence lastname;
  private java.lang.CharSequence link;
  private java.lang.CharSequence middlename;
  private java.lang.CharSequence name;
  private java.lang.CharSequence namemod;
  private java.lang.CharSequence nickname;
  private java.lang.CharSequence osid;
  private java.lang.CharSequence pvsid;
  private java.lang.CharSequence sortname;
  private java.lang.CharSequence twiterid;
  private java.lang.CharSequence youtubeid;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public personRecord() {}

  /**
   * All-args constructor.
   * @param bioguideid The new value for bioguideid
   * @param birthday The new value for birthday
   * @param cspanid The new value for cspanid
   * @param firstname The new value for firstname
   * @param gender The new value for gender
   * @param gender_label The new value for gender_label
   * @param lastname The new value for lastname
   * @param link The new value for link
   * @param middlename The new value for middlename
   * @param name The new value for name
   * @param namemod The new value for namemod
   * @param nickname The new value for nickname
   * @param osid The new value for osid
   * @param pvsid The new value for pvsid
   * @param sortname The new value for sortname
   * @param twiterid The new value for twiterid
   * @param youtubeid The new value for youtubeid
   */
  public personRecord(java.lang.CharSequence bioguideid, java.lang.CharSequence birthday, java.lang.CharSequence cspanid, java.lang.CharSequence firstname, java.lang.CharSequence gender, java.lang.CharSequence gender_label, java.lang.CharSequence lastname, java.lang.CharSequence link, java.lang.CharSequence middlename, java.lang.CharSequence name, java.lang.CharSequence namemod, java.lang.CharSequence nickname, java.lang.CharSequence osid, java.lang.CharSequence pvsid, java.lang.CharSequence sortname, java.lang.CharSequence twiterid, java.lang.CharSequence youtubeid) {
    this.bioguideid = bioguideid;
    this.birthday = birthday;
    this.cspanid = cspanid;
    this.firstname = firstname;
    this.gender = gender;
    this.gender_label = gender_label;
    this.lastname = lastname;
    this.link = link;
    this.middlename = middlename;
    this.name = name;
    this.namemod = namemod;
    this.nickname = nickname;
    this.osid = osid;
    this.pvsid = pvsid;
    this.sortname = sortname;
    this.twiterid = twiterid;
    this.youtubeid = youtubeid;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return bioguideid;
    case 1: return birthday;
    case 2: return cspanid;
    case 3: return firstname;
    case 4: return gender;
    case 5: return gender_label;
    case 6: return lastname;
    case 7: return link;
    case 8: return middlename;
    case 9: return name;
    case 10: return namemod;
    case 11: return nickname;
    case 12: return osid;
    case 13: return pvsid;
    case 14: return sortname;
    case 15: return twiterid;
    case 16: return youtubeid;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: bioguideid = (java.lang.CharSequence)value$; break;
    case 1: birthday = (java.lang.CharSequence)value$; break;
    case 2: cspanid = (java.lang.CharSequence)value$; break;
    case 3: firstname = (java.lang.CharSequence)value$; break;
    case 4: gender = (java.lang.CharSequence)value$; break;
    case 5: gender_label = (java.lang.CharSequence)value$; break;
    case 6: lastname = (java.lang.CharSequence)value$; break;
    case 7: link = (java.lang.CharSequence)value$; break;
    case 8: middlename = (java.lang.CharSequence)value$; break;
    case 9: name = (java.lang.CharSequence)value$; break;
    case 10: namemod = (java.lang.CharSequence)value$; break;
    case 11: nickname = (java.lang.CharSequence)value$; break;
    case 12: osid = (java.lang.CharSequence)value$; break;
    case 13: pvsid = (java.lang.CharSequence)value$; break;
    case 14: sortname = (java.lang.CharSequence)value$; break;
    case 15: twiterid = (java.lang.CharSequence)value$; break;
    case 16: youtubeid = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'bioguideid' field.
   * @return The value of the 'bioguideid' field.
   */
  public java.lang.CharSequence getBioguideid() {
    return bioguideid;
  }


  /**
   * Sets the value of the 'bioguideid' field.
   * @param value the value to set.
   */
  public void setBioguideid(java.lang.CharSequence value) {
    this.bioguideid = value;
  }

  /**
   * Gets the value of the 'birthday' field.
   * @return The value of the 'birthday' field.
   */
  public java.lang.CharSequence getBirthday() {
    return birthday;
  }


  /**
   * Sets the value of the 'birthday' field.
   * @param value the value to set.
   */
  public void setBirthday(java.lang.CharSequence value) {
    this.birthday = value;
  }

  /**
   * Gets the value of the 'cspanid' field.
   * @return The value of the 'cspanid' field.
   */
  public java.lang.CharSequence getCspanid() {
    return cspanid;
  }


  /**
   * Sets the value of the 'cspanid' field.
   * @param value the value to set.
   */
  public void setCspanid(java.lang.CharSequence value) {
    this.cspanid = value;
  }

  /**
   * Gets the value of the 'firstname' field.
   * @return The value of the 'firstname' field.
   */
  public java.lang.CharSequence getFirstname() {
    return firstname;
  }


  /**
   * Sets the value of the 'firstname' field.
   * @param value the value to set.
   */
  public void setFirstname(java.lang.CharSequence value) {
    this.firstname = value;
  }

  /**
   * Gets the value of the 'gender' field.
   * @return The value of the 'gender' field.
   */
  public java.lang.CharSequence getGender() {
    return gender;
  }


  /**
   * Sets the value of the 'gender' field.
   * @param value the value to set.
   */
  public void setGender(java.lang.CharSequence value) {
    this.gender = value;
  }

  /**
   * Gets the value of the 'gender_label' field.
   * @return The value of the 'gender_label' field.
   */
  public java.lang.CharSequence getGenderLabel() {
    return gender_label;
  }


  /**
   * Sets the value of the 'gender_label' field.
   * @param value the value to set.
   */
  public void setGenderLabel(java.lang.CharSequence value) {
    this.gender_label = value;
  }

  /**
   * Gets the value of the 'lastname' field.
   * @return The value of the 'lastname' field.
   */
  public java.lang.CharSequence getLastname() {
    return lastname;
  }


  /**
   * Sets the value of the 'lastname' field.
   * @param value the value to set.
   */
  public void setLastname(java.lang.CharSequence value) {
    this.lastname = value;
  }

  /**
   * Gets the value of the 'link' field.
   * @return The value of the 'link' field.
   */
  public java.lang.CharSequence getLink() {
    return link;
  }


  /**
   * Sets the value of the 'link' field.
   * @param value the value to set.
   */
  public void setLink(java.lang.CharSequence value) {
    this.link = value;
  }

  /**
   * Gets the value of the 'middlename' field.
   * @return The value of the 'middlename' field.
   */
  public java.lang.CharSequence getMiddlename() {
    return middlename;
  }


  /**
   * Sets the value of the 'middlename' field.
   * @param value the value to set.
   */
  public void setMiddlename(java.lang.CharSequence value) {
    this.middlename = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'namemod' field.
   * @return The value of the 'namemod' field.
   */
  public java.lang.CharSequence getNamemod() {
    return namemod;
  }


  /**
   * Sets the value of the 'namemod' field.
   * @param value the value to set.
   */
  public void setNamemod(java.lang.CharSequence value) {
    this.namemod = value;
  }

  /**
   * Gets the value of the 'nickname' field.
   * @return The value of the 'nickname' field.
   */
  public java.lang.CharSequence getNickname() {
    return nickname;
  }


  /**
   * Sets the value of the 'nickname' field.
   * @param value the value to set.
   */
  public void setNickname(java.lang.CharSequence value) {
    this.nickname = value;
  }

  /**
   * Gets the value of the 'osid' field.
   * @return The value of the 'osid' field.
   */
  public java.lang.CharSequence getOsid() {
    return osid;
  }


  /**
   * Sets the value of the 'osid' field.
   * @param value the value to set.
   */
  public void setOsid(java.lang.CharSequence value) {
    this.osid = value;
  }

  /**
   * Gets the value of the 'pvsid' field.
   * @return The value of the 'pvsid' field.
   */
  public java.lang.CharSequence getPvsid() {
    return pvsid;
  }


  /**
   * Sets the value of the 'pvsid' field.
   * @param value the value to set.
   */
  public void setPvsid(java.lang.CharSequence value) {
    this.pvsid = value;
  }

  /**
   * Gets the value of the 'sortname' field.
   * @return The value of the 'sortname' field.
   */
  public java.lang.CharSequence getSortname() {
    return sortname;
  }


  /**
   * Sets the value of the 'sortname' field.
   * @param value the value to set.
   */
  public void setSortname(java.lang.CharSequence value) {
    this.sortname = value;
  }

  /**
   * Gets the value of the 'twiterid' field.
   * @return The value of the 'twiterid' field.
   */
  public java.lang.CharSequence getTwiterid() {
    return twiterid;
  }


  /**
   * Sets the value of the 'twiterid' field.
   * @param value the value to set.
   */
  public void setTwiterid(java.lang.CharSequence value) {
    this.twiterid = value;
  }

  /**
   * Gets the value of the 'youtubeid' field.
   * @return The value of the 'youtubeid' field.
   */
  public java.lang.CharSequence getYoutubeid() {
    return youtubeid;
  }


  /**
   * Sets the value of the 'youtubeid' field.
   * @param value the value to set.
   */
  public void setYoutubeid(java.lang.CharSequence value) {
    this.youtubeid = value;
  }

  /**
   * Creates a new personRecord RecordBuilder.
   * @return A new personRecord RecordBuilder
   */
  public static com.hitachivantara.models.avro.personRecord.Builder newBuilder() {
    return new com.hitachivantara.models.avro.personRecord.Builder();
  }

  /**
   * Creates a new personRecord RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new personRecord RecordBuilder
   */
  public static com.hitachivantara.models.avro.personRecord.Builder newBuilder(com.hitachivantara.models.avro.personRecord.Builder other) {
    if (other == null) {
      return new com.hitachivantara.models.avro.personRecord.Builder();
    } else {
      return new com.hitachivantara.models.avro.personRecord.Builder(other);
    }
  }

  /**
   * Creates a new personRecord RecordBuilder by copying an existing personRecord instance.
   * @param other The existing instance to copy.
   * @return A new personRecord RecordBuilder
   */
  public static com.hitachivantara.models.avro.personRecord.Builder newBuilder(com.hitachivantara.models.avro.personRecord other) {
    if (other == null) {
      return new com.hitachivantara.models.avro.personRecord.Builder();
    } else {
      return new com.hitachivantara.models.avro.personRecord.Builder(other);
    }
  }

  /**
   * RecordBuilder for personRecord instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<personRecord>
    implements org.apache.avro.data.RecordBuilder<personRecord> {

    private java.lang.CharSequence bioguideid;
    private java.lang.CharSequence birthday;
    private java.lang.CharSequence cspanid;
    private java.lang.CharSequence firstname;
    private java.lang.CharSequence gender;
    private java.lang.CharSequence gender_label;
    private java.lang.CharSequence lastname;
    private java.lang.CharSequence link;
    private java.lang.CharSequence middlename;
    private java.lang.CharSequence name;
    private java.lang.CharSequence namemod;
    private java.lang.CharSequence nickname;
    private java.lang.CharSequence osid;
    private java.lang.CharSequence pvsid;
    private java.lang.CharSequence sortname;
    private java.lang.CharSequence twiterid;
    private java.lang.CharSequence youtubeid;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.hitachivantara.models.avro.personRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.bioguideid)) {
        this.bioguideid = data().deepCopy(fields()[0].schema(), other.bioguideid);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.birthday)) {
        this.birthday = data().deepCopy(fields()[1].schema(), other.birthday);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.cspanid)) {
        this.cspanid = data().deepCopy(fields()[2].schema(), other.cspanid);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.firstname)) {
        this.firstname = data().deepCopy(fields()[3].schema(), other.firstname);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.gender)) {
        this.gender = data().deepCopy(fields()[4].schema(), other.gender);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.gender_label)) {
        this.gender_label = data().deepCopy(fields()[5].schema(), other.gender_label);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.lastname)) {
        this.lastname = data().deepCopy(fields()[6].schema(), other.lastname);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.link)) {
        this.link = data().deepCopy(fields()[7].schema(), other.link);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.middlename)) {
        this.middlename = data().deepCopy(fields()[8].schema(), other.middlename);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.name)) {
        this.name = data().deepCopy(fields()[9].schema(), other.name);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.namemod)) {
        this.namemod = data().deepCopy(fields()[10].schema(), other.namemod);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.nickname)) {
        this.nickname = data().deepCopy(fields()[11].schema(), other.nickname);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.osid)) {
        this.osid = data().deepCopy(fields()[12].schema(), other.osid);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.pvsid)) {
        this.pvsid = data().deepCopy(fields()[13].schema(), other.pvsid);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.sortname)) {
        this.sortname = data().deepCopy(fields()[14].schema(), other.sortname);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.twiterid)) {
        this.twiterid = data().deepCopy(fields()[15].schema(), other.twiterid);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.youtubeid)) {
        this.youtubeid = data().deepCopy(fields()[16].schema(), other.youtubeid);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
    }

    /**
     * Creates a Builder by copying an existing personRecord instance
     * @param other The existing instance to copy.
     */
    private Builder(com.hitachivantara.models.avro.personRecord other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.bioguideid)) {
        this.bioguideid = data().deepCopy(fields()[0].schema(), other.bioguideid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.birthday)) {
        this.birthday = data().deepCopy(fields()[1].schema(), other.birthday);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.cspanid)) {
        this.cspanid = data().deepCopy(fields()[2].schema(), other.cspanid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.firstname)) {
        this.firstname = data().deepCopy(fields()[3].schema(), other.firstname);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.gender)) {
        this.gender = data().deepCopy(fields()[4].schema(), other.gender);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.gender_label)) {
        this.gender_label = data().deepCopy(fields()[5].schema(), other.gender_label);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.lastname)) {
        this.lastname = data().deepCopy(fields()[6].schema(), other.lastname);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.link)) {
        this.link = data().deepCopy(fields()[7].schema(), other.link);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.middlename)) {
        this.middlename = data().deepCopy(fields()[8].schema(), other.middlename);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.name)) {
        this.name = data().deepCopy(fields()[9].schema(), other.name);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.namemod)) {
        this.namemod = data().deepCopy(fields()[10].schema(), other.namemod);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.nickname)) {
        this.nickname = data().deepCopy(fields()[11].schema(), other.nickname);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.osid)) {
        this.osid = data().deepCopy(fields()[12].schema(), other.osid);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.pvsid)) {
        this.pvsid = data().deepCopy(fields()[13].schema(), other.pvsid);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.sortname)) {
        this.sortname = data().deepCopy(fields()[14].schema(), other.sortname);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.twiterid)) {
        this.twiterid = data().deepCopy(fields()[15].schema(), other.twiterid);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.youtubeid)) {
        this.youtubeid = data().deepCopy(fields()[16].schema(), other.youtubeid);
        fieldSetFlags()[16] = true;
      }
    }

    /**
      * Gets the value of the 'bioguideid' field.
      * @return The value.
      */
    public java.lang.CharSequence getBioguideid() {
      return bioguideid;
    }


    /**
      * Sets the value of the 'bioguideid' field.
      * @param value The value of 'bioguideid'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setBioguideid(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.bioguideid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'bioguideid' field has been set.
      * @return True if the 'bioguideid' field has been set, false otherwise.
      */
    public boolean hasBioguideid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'bioguideid' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearBioguideid() {
      bioguideid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'birthday' field.
      * @return The value.
      */
    public java.lang.CharSequence getBirthday() {
      return birthday;
    }


    /**
      * Sets the value of the 'birthday' field.
      * @param value The value of 'birthday'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setBirthday(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.birthday = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'birthday' field has been set.
      * @return True if the 'birthday' field has been set, false otherwise.
      */
    public boolean hasBirthday() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'birthday' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearBirthday() {
      birthday = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'cspanid' field.
      * @return The value.
      */
    public java.lang.CharSequence getCspanid() {
      return cspanid;
    }


    /**
      * Sets the value of the 'cspanid' field.
      * @param value The value of 'cspanid'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setCspanid(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.cspanid = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'cspanid' field has been set.
      * @return True if the 'cspanid' field has been set, false otherwise.
      */
    public boolean hasCspanid() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'cspanid' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearCspanid() {
      cspanid = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'firstname' field.
      * @return The value.
      */
    public java.lang.CharSequence getFirstname() {
      return firstname;
    }


    /**
      * Sets the value of the 'firstname' field.
      * @param value The value of 'firstname'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setFirstname(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.firstname = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'firstname' field has been set.
      * @return True if the 'firstname' field has been set, false otherwise.
      */
    public boolean hasFirstname() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'firstname' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearFirstname() {
      firstname = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'gender' field.
      * @return The value.
      */
    public java.lang.CharSequence getGender() {
      return gender;
    }


    /**
      * Sets the value of the 'gender' field.
      * @param value The value of 'gender'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setGender(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.gender = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'gender' field has been set.
      * @return True if the 'gender' field has been set, false otherwise.
      */
    public boolean hasGender() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'gender' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearGender() {
      gender = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'gender_label' field.
      * @return The value.
      */
    public java.lang.CharSequence getGenderLabel() {
      return gender_label;
    }


    /**
      * Sets the value of the 'gender_label' field.
      * @param value The value of 'gender_label'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setGenderLabel(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.gender_label = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'gender_label' field has been set.
      * @return True if the 'gender_label' field has been set, false otherwise.
      */
    public boolean hasGenderLabel() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'gender_label' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearGenderLabel() {
      gender_label = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastname' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastname() {
      return lastname;
    }


    /**
      * Sets the value of the 'lastname' field.
      * @param value The value of 'lastname'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setLastname(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.lastname = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'lastname' field has been set.
      * @return True if the 'lastname' field has been set, false otherwise.
      */
    public boolean hasLastname() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'lastname' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearLastname() {
      lastname = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'link' field.
      * @return The value.
      */
    public java.lang.CharSequence getLink() {
      return link;
    }


    /**
      * Sets the value of the 'link' field.
      * @param value The value of 'link'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setLink(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.link = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'link' field has been set.
      * @return True if the 'link' field has been set, false otherwise.
      */
    public boolean hasLink() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'link' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearLink() {
      link = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'middlename' field.
      * @return The value.
      */
    public java.lang.CharSequence getMiddlename() {
      return middlename;
    }


    /**
      * Sets the value of the 'middlename' field.
      * @param value The value of 'middlename'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setMiddlename(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.middlename = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'middlename' field has been set.
      * @return True if the 'middlename' field has been set, false otherwise.
      */
    public boolean hasMiddlename() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'middlename' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearMiddlename() {
      middlename = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setName(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.name = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearName() {
      name = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'namemod' field.
      * @return The value.
      */
    public java.lang.CharSequence getNamemod() {
      return namemod;
    }


    /**
      * Sets the value of the 'namemod' field.
      * @param value The value of 'namemod'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setNamemod(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.namemod = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'namemod' field has been set.
      * @return True if the 'namemod' field has been set, false otherwise.
      */
    public boolean hasNamemod() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'namemod' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearNamemod() {
      namemod = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'nickname' field.
      * @return The value.
      */
    public java.lang.CharSequence getNickname() {
      return nickname;
    }


    /**
      * Sets the value of the 'nickname' field.
      * @param value The value of 'nickname'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setNickname(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.nickname = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'nickname' field has been set.
      * @return True if the 'nickname' field has been set, false otherwise.
      */
    public boolean hasNickname() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'nickname' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearNickname() {
      nickname = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'osid' field.
      * @return The value.
      */
    public java.lang.CharSequence getOsid() {
      return osid;
    }


    /**
      * Sets the value of the 'osid' field.
      * @param value The value of 'osid'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setOsid(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.osid = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'osid' field has been set.
      * @return True if the 'osid' field has been set, false otherwise.
      */
    public boolean hasOsid() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'osid' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearOsid() {
      osid = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'pvsid' field.
      * @return The value.
      */
    public java.lang.CharSequence getPvsid() {
      return pvsid;
    }


    /**
      * Sets the value of the 'pvsid' field.
      * @param value The value of 'pvsid'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setPvsid(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.pvsid = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'pvsid' field has been set.
      * @return True if the 'pvsid' field has been set, false otherwise.
      */
    public boolean hasPvsid() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'pvsid' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearPvsid() {
      pvsid = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'sortname' field.
      * @return The value.
      */
    public java.lang.CharSequence getSortname() {
      return sortname;
    }


    /**
      * Sets the value of the 'sortname' field.
      * @param value The value of 'sortname'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setSortname(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.sortname = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'sortname' field has been set.
      * @return True if the 'sortname' field has been set, false otherwise.
      */
    public boolean hasSortname() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'sortname' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearSortname() {
      sortname = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'twiterid' field.
      * @return The value.
      */
    public java.lang.CharSequence getTwiterid() {
      return twiterid;
    }


    /**
      * Sets the value of the 'twiterid' field.
      * @param value The value of 'twiterid'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setTwiterid(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.twiterid = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'twiterid' field has been set.
      * @return True if the 'twiterid' field has been set, false otherwise.
      */
    public boolean hasTwiterid() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'twiterid' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearTwiterid() {
      twiterid = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'youtubeid' field.
      * @return The value.
      */
    public java.lang.CharSequence getYoutubeid() {
      return youtubeid;
    }


    /**
      * Sets the value of the 'youtubeid' field.
      * @param value The value of 'youtubeid'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder setYoutubeid(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.youtubeid = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'youtubeid' field has been set.
      * @return True if the 'youtubeid' field has been set, false otherwise.
      */
    public boolean hasYoutubeid() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'youtubeid' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.personRecord.Builder clearYoutubeid() {
      youtubeid = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public personRecord build() {
      try {
        personRecord record = new personRecord();
        record.bioguideid = fieldSetFlags()[0] ? this.bioguideid : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.birthday = fieldSetFlags()[1] ? this.birthday : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.cspanid = fieldSetFlags()[2] ? this.cspanid : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.firstname = fieldSetFlags()[3] ? this.firstname : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.gender = fieldSetFlags()[4] ? this.gender : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.gender_label = fieldSetFlags()[5] ? this.gender_label : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.lastname = fieldSetFlags()[6] ? this.lastname : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.link = fieldSetFlags()[7] ? this.link : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.middlename = fieldSetFlags()[8] ? this.middlename : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.name = fieldSetFlags()[9] ? this.name : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.namemod = fieldSetFlags()[10] ? this.namemod : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.nickname = fieldSetFlags()[11] ? this.nickname : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.osid = fieldSetFlags()[12] ? this.osid : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.pvsid = fieldSetFlags()[13] ? this.pvsid : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.sortname = fieldSetFlags()[14] ? this.sortname : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.twiterid = fieldSetFlags()[15] ? this.twiterid : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.youtubeid = fieldSetFlags()[16] ? this.youtubeid : (java.lang.CharSequence) defaultValue(fields()[16]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<personRecord>
    WRITER$ = (org.apache.avro.io.DatumWriter<personRecord>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<personRecord>
    READER$ = (org.apache.avro.io.DatumReader<personRecord>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.bioguideid);

    out.writeString(this.birthday);

    out.writeString(this.cspanid);

    out.writeString(this.firstname);

    out.writeString(this.gender);

    out.writeString(this.gender_label);

    out.writeString(this.lastname);

    out.writeString(this.link);

    out.writeString(this.middlename);

    out.writeString(this.name);

    out.writeString(this.namemod);

    out.writeString(this.nickname);

    out.writeString(this.osid);

    out.writeString(this.pvsid);

    out.writeString(this.sortname);

    out.writeString(this.twiterid);

    out.writeString(this.youtubeid);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.bioguideid = in.readString(this.bioguideid instanceof Utf8 ? (Utf8)this.bioguideid : null);

      this.birthday = in.readString(this.birthday instanceof Utf8 ? (Utf8)this.birthday : null);

      this.cspanid = in.readString(this.cspanid instanceof Utf8 ? (Utf8)this.cspanid : null);

      this.firstname = in.readString(this.firstname instanceof Utf8 ? (Utf8)this.firstname : null);

      this.gender = in.readString(this.gender instanceof Utf8 ? (Utf8)this.gender : null);

      this.gender_label = in.readString(this.gender_label instanceof Utf8 ? (Utf8)this.gender_label : null);

      this.lastname = in.readString(this.lastname instanceof Utf8 ? (Utf8)this.lastname : null);

      this.link = in.readString(this.link instanceof Utf8 ? (Utf8)this.link : null);

      this.middlename = in.readString(this.middlename instanceof Utf8 ? (Utf8)this.middlename : null);

      this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);

      this.namemod = in.readString(this.namemod instanceof Utf8 ? (Utf8)this.namemod : null);

      this.nickname = in.readString(this.nickname instanceof Utf8 ? (Utf8)this.nickname : null);

      this.osid = in.readString(this.osid instanceof Utf8 ? (Utf8)this.osid : null);

      this.pvsid = in.readString(this.pvsid instanceof Utf8 ? (Utf8)this.pvsid : null);

      this.sortname = in.readString(this.sortname instanceof Utf8 ? (Utf8)this.sortname : null);

      this.twiterid = in.readString(this.twiterid instanceof Utf8 ? (Utf8)this.twiterid : null);

      this.youtubeid = in.readString(this.youtubeid instanceof Utf8 ? (Utf8)this.youtubeid : null);

    } else {
      for (int i = 0; i < 17; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.bioguideid = in.readString(this.bioguideid instanceof Utf8 ? (Utf8)this.bioguideid : null);
          break;

        case 1:
          this.birthday = in.readString(this.birthday instanceof Utf8 ? (Utf8)this.birthday : null);
          break;

        case 2:
          this.cspanid = in.readString(this.cspanid instanceof Utf8 ? (Utf8)this.cspanid : null);
          break;

        case 3:
          this.firstname = in.readString(this.firstname instanceof Utf8 ? (Utf8)this.firstname : null);
          break;

        case 4:
          this.gender = in.readString(this.gender instanceof Utf8 ? (Utf8)this.gender : null);
          break;

        case 5:
          this.gender_label = in.readString(this.gender_label instanceof Utf8 ? (Utf8)this.gender_label : null);
          break;

        case 6:
          this.lastname = in.readString(this.lastname instanceof Utf8 ? (Utf8)this.lastname : null);
          break;

        case 7:
          this.link = in.readString(this.link instanceof Utf8 ? (Utf8)this.link : null);
          break;

        case 8:
          this.middlename = in.readString(this.middlename instanceof Utf8 ? (Utf8)this.middlename : null);
          break;

        case 9:
          this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);
          break;

        case 10:
          this.namemod = in.readString(this.namemod instanceof Utf8 ? (Utf8)this.namemod : null);
          break;

        case 11:
          this.nickname = in.readString(this.nickname instanceof Utf8 ? (Utf8)this.nickname : null);
          break;

        case 12:
          this.osid = in.readString(this.osid instanceof Utf8 ? (Utf8)this.osid : null);
          break;

        case 13:
          this.pvsid = in.readString(this.pvsid instanceof Utf8 ? (Utf8)this.pvsid : null);
          break;

        case 14:
          this.sortname = in.readString(this.sortname instanceof Utf8 ? (Utf8)this.sortname : null);
          break;

        case 15:
          this.twiterid = in.readString(this.twiterid instanceof Utf8 ? (Utf8)this.twiterid : null);
          break;

        case 16:
          this.youtubeid = in.readString(this.youtubeid instanceof Utf8 ? (Utf8)this.youtubeid : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










