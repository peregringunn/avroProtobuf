/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hitachivantara.models.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class representatives extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5901424743003790826L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"representatives\",\"namespace\":\"com.hitachivantara.avro\",\"fields\":[{\"name\":\"meta\",\"type\":{\"type\":\"record\",\"name\":\"metaRecord\",\"fields\":[{\"name\":\"limit\",\"type\":\"long\"},{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"total_count\",\"type\":\"long\"}]}},{\"name\":\"objects\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ObjectsRecord\",\"fields\":[{\"name\":\"caucus\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"congress_numbers\",\"type\":{\"type\":\"array\",\"items\":\"long\"},\"default\":[]},{\"name\":\"current\",\"type\":\"boolean\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"district\",\"type\":\"long\"},{\"name\":\"enddate\",\"type\":\"string\"},{\"name\":\"extra\",\"type\":{\"type\":\"record\",\"name\":\"extraRecord\",\"fields\":[{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"office\",\"type\":\"string\"},{\"name\":\"rss_url\",\"type\":\"string\"}]}},{\"name\":\"leadership_title\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"party\",\"type\":\"string\"},{\"name\":\"person\",\"type\":{\"type\":\"record\",\"name\":\"personRecord\",\"fields\":[{\"name\":\"bioguideid\",\"type\":\"string\"},{\"name\":\"birthday\",\"type\":\"string\"},{\"name\":\"cspanid\",\"type\":\"string\"},{\"name\":\"firstname\",\"type\":\"string\"},{\"name\":\"gender\",\"type\":\"string\"},{\"name\":\"gender_label\",\"type\":\"string\"},{\"name\":\"lastname\",\"type\":\"string\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"middlename\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"namemod\",\"type\":\"string\"},{\"name\":\"nickname\",\"type\":\"string\"},{\"name\":\"osid\",\"type\":\"string\"},{\"name\":\"pvsid\",\"type\":\"string\"},{\"name\":\"sortname\",\"type\":\"string\"},{\"name\":\"twiterid\",\"type\":\"string\"},{\"name\":\"youtubeid\",\"type\":\"string\"}]}},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"role_type\",\"type\":\"string\"},{\"name\":\"role_type_label\",\"type\":\"string\"},{\"name\":\"startdate\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"title_long\",\"type\":\"string\"},{\"name\":\"website\",\"type\":\"string\"}]},\"default\":[]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<representatives> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<representatives> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<representatives> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<representatives> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<representatives> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this representatives to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a representatives from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a representatives instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static representatives fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private com.hitachivantara.models.avro.metaRecord meta;
  private java.util.List<com.hitachivantara.models.avro.ObjectsRecord> objects;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public representatives() {}

  /**
   * All-args constructor.
   * @param meta The new value for meta
   * @param objects The new value for objects
   */
  public representatives(com.hitachivantara.models.avro.metaRecord meta, java.util.List<com.hitachivantara.models.avro.ObjectsRecord> objects) {
    this.meta = meta;
    this.objects = objects;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return meta;
    case 1: return objects;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: meta = (com.hitachivantara.models.avro.metaRecord)value$; break;
    case 1: objects = (java.util.List<com.hitachivantara.models.avro.ObjectsRecord>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'meta' field.
   * @return The value of the 'meta' field.
   */
  public com.hitachivantara.models.avro.metaRecord getMeta() {
    return meta;
  }


  /**
   * Sets the value of the 'meta' field.
   * @param value the value to set.
   */
  public void setMeta(com.hitachivantara.models.avro.metaRecord value) {
    this.meta = value;
  }

  /**
   * Gets the value of the 'objects' field.
   * @return The value of the 'objects' field.
   */
  public java.util.List<com.hitachivantara.models.avro.ObjectsRecord> getObjects() {
    return objects;
  }


  /**
   * Sets the value of the 'objects' field.
   * @param value the value to set.
   */
  public void setObjects(java.util.List<com.hitachivantara.models.avro.ObjectsRecord> value) {
    this.objects = value;
  }

  /**
   * Creates a new representatives RecordBuilder.
   * @return A new representatives RecordBuilder
   */
  public static com.hitachivantara.models.avro.representatives.Builder newBuilder() {
    return new com.hitachivantara.models.avro.representatives.Builder();
  }

  /**
   * Creates a new representatives RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new representatives RecordBuilder
   */
  public static com.hitachivantara.models.avro.representatives.Builder newBuilder(com.hitachivantara.models.avro.representatives.Builder other) {
    if (other == null) {
      return new com.hitachivantara.models.avro.representatives.Builder();
    } else {
      return new com.hitachivantara.models.avro.representatives.Builder(other);
    }
  }

  /**
   * Creates a new representatives RecordBuilder by copying an existing representatives instance.
   * @param other The existing instance to copy.
   * @return A new representatives RecordBuilder
   */
  public static com.hitachivantara.models.avro.representatives.Builder newBuilder(com.hitachivantara.models.avro.representatives other) {
    if (other == null) {
      return new com.hitachivantara.models.avro.representatives.Builder();
    } else {
      return new com.hitachivantara.models.avro.representatives.Builder(other);
    }
  }

  /**
   * RecordBuilder for representatives instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<representatives>
    implements org.apache.avro.data.RecordBuilder<representatives> {

    private com.hitachivantara.models.avro.metaRecord meta;
    private com.hitachivantara.models.avro.metaRecord.Builder metaBuilder;
    private java.util.List<com.hitachivantara.models.avro.ObjectsRecord> objects;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.hitachivantara.models.avro.representatives.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.meta)) {
        this.meta = data().deepCopy(fields()[0].schema(), other.meta);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasMetaBuilder()) {
        this.metaBuilder = com.hitachivantara.models.avro.metaRecord.newBuilder(other.getMetaBuilder());
      }
      if (isValidValue(fields()[1], other.objects)) {
        this.objects = data().deepCopy(fields()[1].schema(), other.objects);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
    }

    /**
     * Creates a Builder by copying an existing representatives instance
     * @param other The existing instance to copy.
     */
    private Builder(com.hitachivantara.models.avro.representatives other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.meta)) {
        this.meta = data().deepCopy(fields()[0].schema(), other.meta);
        fieldSetFlags()[0] = true;
      }
      this.metaBuilder = null;
      if (isValidValue(fields()[1], other.objects)) {
        this.objects = data().deepCopy(fields()[1].schema(), other.objects);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'meta' field.
      * @return The value.
      */
    public com.hitachivantara.models.avro.metaRecord getMeta() {
      return meta;
    }


    /**
      * Sets the value of the 'meta' field.
      * @param value The value of 'meta'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.representatives.Builder setMeta(com.hitachivantara.models.avro.metaRecord value) {
      validate(fields()[0], value);
      this.metaBuilder = null;
      this.meta = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'meta' field has been set.
      * @return True if the 'meta' field has been set, false otherwise.
      */
    public boolean hasMeta() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'meta' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hitachivantara.models.avro.metaRecord.Builder getMetaBuilder() {
      if (metaBuilder == null) {
        if (hasMeta()) {
          setMetaBuilder(com.hitachivantara.models.avro.metaRecord.newBuilder(meta));
        } else {
          setMetaBuilder(com.hitachivantara.models.avro.metaRecord.newBuilder());
        }
      }
      return metaBuilder;
    }

    /**
     * Sets the Builder instance for the 'meta' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.hitachivantara.models.avro.representatives.Builder setMetaBuilder(com.hitachivantara.models.avro.metaRecord.Builder value) {
      clearMeta();
      metaBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'meta' field has an active Builder instance
     * @return True if the 'meta' field has an active Builder instance
     */
    public boolean hasMetaBuilder() {
      return metaBuilder != null;
    }

    /**
      * Clears the value of the 'meta' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.representatives.Builder clearMeta() {
      meta = null;
      metaBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'objects' field.
      * @return The value.
      */
    public java.util.List<com.hitachivantara.models.avro.ObjectsRecord> getObjects() {
      return objects;
    }


    /**
      * Sets the value of the 'objects' field.
      * @param value The value of 'objects'.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.representatives.Builder setObjects(java.util.List<com.hitachivantara.models.avro.ObjectsRecord> value) {
      validate(fields()[1], value);
      this.objects = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'objects' field has been set.
      * @return True if the 'objects' field has been set, false otherwise.
      */
    public boolean hasObjects() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'objects' field.
      * @return This builder.
      */
    public com.hitachivantara.models.avro.representatives.Builder clearObjects() {
      objects = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public representatives build() {
      try {
        representatives record = new representatives();
        if (metaBuilder != null) {
          try {
            record.meta = this.metaBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("meta"));
            throw e;
          }
        } else {
          record.meta = fieldSetFlags()[0] ? this.meta : (com.hitachivantara.models.avro.metaRecord) defaultValue(fields()[0]);
        }
        record.objects = fieldSetFlags()[1] ? this.objects : (java.util.List<com.hitachivantara.models.avro.ObjectsRecord>) defaultValue(fields()[1]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<representatives>
    WRITER$ = (org.apache.avro.io.DatumWriter<representatives>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<representatives>
    READER$ = (org.apache.avro.io.DatumReader<representatives>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.meta.customEncode(out);

    long size0 = this.objects.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.hitachivantara.models.avro.ObjectsRecord e0: this.objects) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.meta == null) {
        this.meta = new com.hitachivantara.models.avro.metaRecord();
      }
      this.meta.customDecode(in);

      long size0 = in.readArrayStart();
      java.util.List<com.hitachivantara.models.avro.ObjectsRecord> a0 = this.objects;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.hitachivantara.models.avro.ObjectsRecord>((int)size0, SCHEMA$.getField("objects").schema());
        this.objects = a0;
      } else a0.clear();
      SpecificData.Array<com.hitachivantara.models.avro.ObjectsRecord> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.hitachivantara.models.avro.ObjectsRecord>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.hitachivantara.models.avro.ObjectsRecord e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new com.hitachivantara.models.avro.ObjectsRecord();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 2; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.meta == null) {
            this.meta = new com.hitachivantara.models.avro.metaRecord();
          }
          this.meta.customDecode(in);
          break;

        case 1:
          long size0 = in.readArrayStart();
          java.util.List<com.hitachivantara.models.avro.ObjectsRecord> a0 = this.objects;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.hitachivantara.models.avro.ObjectsRecord>((int)size0, SCHEMA$.getField("objects").schema());
            this.objects = a0;
          } else a0.clear();
          SpecificData.Array<com.hitachivantara.models.avro.ObjectsRecord> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.hitachivantara.models.avro.ObjectsRecord>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.hitachivantara.models.avro.ObjectsRecord e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new com.hitachivantara.models.avro.ObjectsRecord();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










