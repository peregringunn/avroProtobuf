/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hitachivantara.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class StatisticsRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2850776580513055704L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StatisticsRecord\",\"namespace\":\"com.hitachivantara.avro\",\"fields\":[{\"name\":\"NumberOfDelays\",\"type\":{\"type\":\"record\",\"name\":\"NumberOfDelaysRecord\",\"fields\":[{\"name\":\"Carrier\",\"type\":\"long\"},{\"name\":\"LateAircraft\",\"type\":\"long\"},{\"name\":\"NationalAviationSystem\",\"type\":\"long\"},{\"name\":\"Security\",\"type\":\"long\"},{\"name\":\"Weather\",\"type\":\"long\"}]}},{\"name\":\"Carriers\",\"type\":{\"type\":\"record\",\"name\":\"CarriersRecord\",\"fields\":[{\"name\":\"Names\",\"type\":\"string\"},{\"name\":\"Total\",\"type\":\"long\"}]}},{\"name\":\"Flights\",\"type\":{\"type\":\"record\",\"name\":\"FlightsRecord\",\"fields\":[{\"name\":\"Cancelled\",\"type\":\"long\"},{\"name\":\"Delayed\",\"type\":\"long\"},{\"name\":\"Diverted\",\"type\":\"long\"},{\"name\":\"OnTime\",\"type\":\"long\"},{\"name\":\"Total\",\"type\":\"long\"}]}},{\"name\":\"MinutesDelayed\",\"type\":{\"type\":\"record\",\"name\":\"MinutesDelayedRecord\",\"fields\":[{\"name\":\"Carrier\",\"type\":\"long\"},{\"name\":\"LateAircraft\",\"type\":\"long\"},{\"name\":\"NationalAviationSystem\",\"type\":\"long\"},{\"name\":\"Security\",\"type\":\"long\"},{\"name\":\"Total\",\"type\":\"long\"},{\"name\":\"Weather\",\"type\":\"long\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<StatisticsRecord> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<StatisticsRecord> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<StatisticsRecord> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<StatisticsRecord> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<StatisticsRecord> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this StatisticsRecord to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a StatisticsRecord from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a StatisticsRecord instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static StatisticsRecord fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private com.hitachivantara.avro.NumberOfDelaysRecord NumberOfDelays;
  private com.hitachivantara.avro.CarriersRecord Carriers;
  private com.hitachivantara.avro.FlightsRecord Flights;
  private com.hitachivantara.avro.MinutesDelayedRecord MinutesDelayed;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public StatisticsRecord() {}

  /**
   * All-args constructor.
   * @param NumberOfDelays The new value for NumberOfDelays
   * @param Carriers The new value for Carriers
   * @param Flights The new value for Flights
   * @param MinutesDelayed The new value for MinutesDelayed
   */
  public StatisticsRecord(com.hitachivantara.avro.NumberOfDelaysRecord NumberOfDelays, com.hitachivantara.avro.CarriersRecord Carriers, com.hitachivantara.avro.FlightsRecord Flights, com.hitachivantara.avro.MinutesDelayedRecord MinutesDelayed) {
    this.NumberOfDelays = NumberOfDelays;
    this.Carriers = Carriers;
    this.Flights = Flights;
    this.MinutesDelayed = MinutesDelayed;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return NumberOfDelays;
    case 1: return Carriers;
    case 2: return Flights;
    case 3: return MinutesDelayed;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: NumberOfDelays = (com.hitachivantara.avro.NumberOfDelaysRecord)value$; break;
    case 1: Carriers = (com.hitachivantara.avro.CarriersRecord)value$; break;
    case 2: Flights = (com.hitachivantara.avro.FlightsRecord)value$; break;
    case 3: MinutesDelayed = (com.hitachivantara.avro.MinutesDelayedRecord)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'NumberOfDelays' field.
   * @return The value of the 'NumberOfDelays' field.
   */
  public com.hitachivantara.avro.NumberOfDelaysRecord getNumberOfDelays() {
    return NumberOfDelays;
  }


  /**
   * Sets the value of the 'NumberOfDelays' field.
   * @param value the value to set.
   */
  public void setNumberOfDelays(com.hitachivantara.avro.NumberOfDelaysRecord value) {
    this.NumberOfDelays = value;
  }

  /**
   * Gets the value of the 'Carriers' field.
   * @return The value of the 'Carriers' field.
   */
  public com.hitachivantara.avro.CarriersRecord getCarriers() {
    return Carriers;
  }


  /**
   * Sets the value of the 'Carriers' field.
   * @param value the value to set.
   */
  public void setCarriers(com.hitachivantara.avro.CarriersRecord value) {
    this.Carriers = value;
  }

  /**
   * Gets the value of the 'Flights' field.
   * @return The value of the 'Flights' field.
   */
  public com.hitachivantara.avro.FlightsRecord getFlights() {
    return Flights;
  }


  /**
   * Sets the value of the 'Flights' field.
   * @param value the value to set.
   */
  public void setFlights(com.hitachivantara.avro.FlightsRecord value) {
    this.Flights = value;
  }

  /**
   * Gets the value of the 'MinutesDelayed' field.
   * @return The value of the 'MinutesDelayed' field.
   */
  public com.hitachivantara.avro.MinutesDelayedRecord getMinutesDelayed() {
    return MinutesDelayed;
  }


  /**
   * Sets the value of the 'MinutesDelayed' field.
   * @param value the value to set.
   */
  public void setMinutesDelayed(com.hitachivantara.avro.MinutesDelayedRecord value) {
    this.MinutesDelayed = value;
  }

  /**
   * Creates a new StatisticsRecord RecordBuilder.
   * @return A new StatisticsRecord RecordBuilder
   */
  public static com.hitachivantara.avro.StatisticsRecord.Builder newBuilder() {
    return new com.hitachivantara.avro.StatisticsRecord.Builder();
  }

  /**
   * Creates a new StatisticsRecord RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new StatisticsRecord RecordBuilder
   */
  public static com.hitachivantara.avro.StatisticsRecord.Builder newBuilder(com.hitachivantara.avro.StatisticsRecord.Builder other) {
    if (other == null) {
      return new com.hitachivantara.avro.StatisticsRecord.Builder();
    } else {
      return new com.hitachivantara.avro.StatisticsRecord.Builder(other);
    }
  }

  /**
   * Creates a new StatisticsRecord RecordBuilder by copying an existing StatisticsRecord instance.
   * @param other The existing instance to copy.
   * @return A new StatisticsRecord RecordBuilder
   */
  public static com.hitachivantara.avro.StatisticsRecord.Builder newBuilder(com.hitachivantara.avro.StatisticsRecord other) {
    if (other == null) {
      return new com.hitachivantara.avro.StatisticsRecord.Builder();
    } else {
      return new com.hitachivantara.avro.StatisticsRecord.Builder(other);
    }
  }

  /**
   * RecordBuilder for StatisticsRecord instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StatisticsRecord>
    implements org.apache.avro.data.RecordBuilder<StatisticsRecord> {

    private com.hitachivantara.avro.NumberOfDelaysRecord NumberOfDelays;
    private com.hitachivantara.avro.NumberOfDelaysRecord.Builder NumberOfDelaysBuilder;
    private com.hitachivantara.avro.CarriersRecord Carriers;
    private com.hitachivantara.avro.CarriersRecord.Builder CarriersBuilder;
    private com.hitachivantara.avro.FlightsRecord Flights;
    private com.hitachivantara.avro.FlightsRecord.Builder FlightsBuilder;
    private com.hitachivantara.avro.MinutesDelayedRecord MinutesDelayed;
    private com.hitachivantara.avro.MinutesDelayedRecord.Builder MinutesDelayedBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.hitachivantara.avro.StatisticsRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.NumberOfDelays)) {
        this.NumberOfDelays = data().deepCopy(fields()[0].schema(), other.NumberOfDelays);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasNumberOfDelaysBuilder()) {
        this.NumberOfDelaysBuilder = com.hitachivantara.avro.NumberOfDelaysRecord.newBuilder(other.getNumberOfDelaysBuilder());
      }
      if (isValidValue(fields()[1], other.Carriers)) {
        this.Carriers = data().deepCopy(fields()[1].schema(), other.Carriers);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasCarriersBuilder()) {
        this.CarriersBuilder = com.hitachivantara.avro.CarriersRecord.newBuilder(other.getCarriersBuilder());
      }
      if (isValidValue(fields()[2], other.Flights)) {
        this.Flights = data().deepCopy(fields()[2].schema(), other.Flights);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasFlightsBuilder()) {
        this.FlightsBuilder = com.hitachivantara.avro.FlightsRecord.newBuilder(other.getFlightsBuilder());
      }
      if (isValidValue(fields()[3], other.MinutesDelayed)) {
        this.MinutesDelayed = data().deepCopy(fields()[3].schema(), other.MinutesDelayed);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasMinutesDelayedBuilder()) {
        this.MinutesDelayedBuilder = com.hitachivantara.avro.MinutesDelayedRecord.newBuilder(other.getMinutesDelayedBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing StatisticsRecord instance
     * @param other The existing instance to copy.
     */
    private Builder(com.hitachivantara.avro.StatisticsRecord other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.NumberOfDelays)) {
        this.NumberOfDelays = data().deepCopy(fields()[0].schema(), other.NumberOfDelays);
        fieldSetFlags()[0] = true;
      }
      this.NumberOfDelaysBuilder = null;
      if (isValidValue(fields()[1], other.Carriers)) {
        this.Carriers = data().deepCopy(fields()[1].schema(), other.Carriers);
        fieldSetFlags()[1] = true;
      }
      this.CarriersBuilder = null;
      if (isValidValue(fields()[2], other.Flights)) {
        this.Flights = data().deepCopy(fields()[2].schema(), other.Flights);
        fieldSetFlags()[2] = true;
      }
      this.FlightsBuilder = null;
      if (isValidValue(fields()[3], other.MinutesDelayed)) {
        this.MinutesDelayed = data().deepCopy(fields()[3].schema(), other.MinutesDelayed);
        fieldSetFlags()[3] = true;
      }
      this.MinutesDelayedBuilder = null;
    }

    /**
      * Gets the value of the 'NumberOfDelays' field.
      * @return The value.
      */
    public com.hitachivantara.avro.NumberOfDelaysRecord getNumberOfDelays() {
      return NumberOfDelays;
    }


    /**
      * Sets the value of the 'NumberOfDelays' field.
      * @param value The value of 'NumberOfDelays'.
      * @return This builder.
      */
    public com.hitachivantara.avro.StatisticsRecord.Builder setNumberOfDelays(com.hitachivantara.avro.NumberOfDelaysRecord value) {
      validate(fields()[0], value);
      this.NumberOfDelaysBuilder = null;
      this.NumberOfDelays = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'NumberOfDelays' field has been set.
      * @return True if the 'NumberOfDelays' field has been set, false otherwise.
      */
    public boolean hasNumberOfDelays() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'NumberOfDelays' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hitachivantara.avro.NumberOfDelaysRecord.Builder getNumberOfDelaysBuilder() {
      if (NumberOfDelaysBuilder == null) {
        if (hasNumberOfDelays()) {
          setNumberOfDelaysBuilder(com.hitachivantara.avro.NumberOfDelaysRecord.newBuilder(NumberOfDelays));
        } else {
          setNumberOfDelaysBuilder(com.hitachivantara.avro.NumberOfDelaysRecord.newBuilder());
        }
      }
      return NumberOfDelaysBuilder;
    }

    /**
     * Sets the Builder instance for the 'NumberOfDelays' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.hitachivantara.avro.StatisticsRecord.Builder setNumberOfDelaysBuilder(com.hitachivantara.avro.NumberOfDelaysRecord.Builder value) {
      clearNumberOfDelays();
      NumberOfDelaysBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'NumberOfDelays' field has an active Builder instance
     * @return True if the 'NumberOfDelays' field has an active Builder instance
     */
    public boolean hasNumberOfDelaysBuilder() {
      return NumberOfDelaysBuilder != null;
    }

    /**
      * Clears the value of the 'NumberOfDelays' field.
      * @return This builder.
      */
    public com.hitachivantara.avro.StatisticsRecord.Builder clearNumberOfDelays() {
      NumberOfDelays = null;
      NumberOfDelaysBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Carriers' field.
      * @return The value.
      */
    public com.hitachivantara.avro.CarriersRecord getCarriers() {
      return Carriers;
    }


    /**
      * Sets the value of the 'Carriers' field.
      * @param value The value of 'Carriers'.
      * @return This builder.
      */
    public com.hitachivantara.avro.StatisticsRecord.Builder setCarriers(com.hitachivantara.avro.CarriersRecord value) {
      validate(fields()[1], value);
      this.CarriersBuilder = null;
      this.Carriers = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Carriers' field has been set.
      * @return True if the 'Carriers' field has been set, false otherwise.
      */
    public boolean hasCarriers() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'Carriers' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hitachivantara.avro.CarriersRecord.Builder getCarriersBuilder() {
      if (CarriersBuilder == null) {
        if (hasCarriers()) {
          setCarriersBuilder(com.hitachivantara.avro.CarriersRecord.newBuilder(Carriers));
        } else {
          setCarriersBuilder(com.hitachivantara.avro.CarriersRecord.newBuilder());
        }
      }
      return CarriersBuilder;
    }

    /**
     * Sets the Builder instance for the 'Carriers' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.hitachivantara.avro.StatisticsRecord.Builder setCarriersBuilder(com.hitachivantara.avro.CarriersRecord.Builder value) {
      clearCarriers();
      CarriersBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'Carriers' field has an active Builder instance
     * @return True if the 'Carriers' field has an active Builder instance
     */
    public boolean hasCarriersBuilder() {
      return CarriersBuilder != null;
    }

    /**
      * Clears the value of the 'Carriers' field.
      * @return This builder.
      */
    public com.hitachivantara.avro.StatisticsRecord.Builder clearCarriers() {
      Carriers = null;
      CarriersBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'Flights' field.
      * @return The value.
      */
    public com.hitachivantara.avro.FlightsRecord getFlights() {
      return Flights;
    }


    /**
      * Sets the value of the 'Flights' field.
      * @param value The value of 'Flights'.
      * @return This builder.
      */
    public com.hitachivantara.avro.StatisticsRecord.Builder setFlights(com.hitachivantara.avro.FlightsRecord value) {
      validate(fields()[2], value);
      this.FlightsBuilder = null;
      this.Flights = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'Flights' field has been set.
      * @return True if the 'Flights' field has been set, false otherwise.
      */
    public boolean hasFlights() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'Flights' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hitachivantara.avro.FlightsRecord.Builder getFlightsBuilder() {
      if (FlightsBuilder == null) {
        if (hasFlights()) {
          setFlightsBuilder(com.hitachivantara.avro.FlightsRecord.newBuilder(Flights));
        } else {
          setFlightsBuilder(com.hitachivantara.avro.FlightsRecord.newBuilder());
        }
      }
      return FlightsBuilder;
    }

    /**
     * Sets the Builder instance for the 'Flights' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.hitachivantara.avro.StatisticsRecord.Builder setFlightsBuilder(com.hitachivantara.avro.FlightsRecord.Builder value) {
      clearFlights();
      FlightsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'Flights' field has an active Builder instance
     * @return True if the 'Flights' field has an active Builder instance
     */
    public boolean hasFlightsBuilder() {
      return FlightsBuilder != null;
    }

    /**
      * Clears the value of the 'Flights' field.
      * @return This builder.
      */
    public com.hitachivantara.avro.StatisticsRecord.Builder clearFlights() {
      Flights = null;
      FlightsBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'MinutesDelayed' field.
      * @return The value.
      */
    public com.hitachivantara.avro.MinutesDelayedRecord getMinutesDelayed() {
      return MinutesDelayed;
    }


    /**
      * Sets the value of the 'MinutesDelayed' field.
      * @param value The value of 'MinutesDelayed'.
      * @return This builder.
      */
    public com.hitachivantara.avro.StatisticsRecord.Builder setMinutesDelayed(com.hitachivantara.avro.MinutesDelayedRecord value) {
      validate(fields()[3], value);
      this.MinutesDelayedBuilder = null;
      this.MinutesDelayed = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'MinutesDelayed' field has been set.
      * @return True if the 'MinutesDelayed' field has been set, false otherwise.
      */
    public boolean hasMinutesDelayed() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'MinutesDelayed' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hitachivantara.avro.MinutesDelayedRecord.Builder getMinutesDelayedBuilder() {
      if (MinutesDelayedBuilder == null) {
        if (hasMinutesDelayed()) {
          setMinutesDelayedBuilder(com.hitachivantara.avro.MinutesDelayedRecord.newBuilder(MinutesDelayed));
        } else {
          setMinutesDelayedBuilder(com.hitachivantara.avro.MinutesDelayedRecord.newBuilder());
        }
      }
      return MinutesDelayedBuilder;
    }

    /**
     * Sets the Builder instance for the 'MinutesDelayed' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.hitachivantara.avro.StatisticsRecord.Builder setMinutesDelayedBuilder(com.hitachivantara.avro.MinutesDelayedRecord.Builder value) {
      clearMinutesDelayed();
      MinutesDelayedBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'MinutesDelayed' field has an active Builder instance
     * @return True if the 'MinutesDelayed' field has an active Builder instance
     */
    public boolean hasMinutesDelayedBuilder() {
      return MinutesDelayedBuilder != null;
    }

    /**
      * Clears the value of the 'MinutesDelayed' field.
      * @return This builder.
      */
    public com.hitachivantara.avro.StatisticsRecord.Builder clearMinutesDelayed() {
      MinutesDelayed = null;
      MinutesDelayedBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public StatisticsRecord build() {
      try {
        StatisticsRecord record = new StatisticsRecord();
        if (NumberOfDelaysBuilder != null) {
          try {
            record.NumberOfDelays = this.NumberOfDelaysBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("NumberOfDelays"));
            throw e;
          }
        } else {
          record.NumberOfDelays = fieldSetFlags()[0] ? this.NumberOfDelays : (com.hitachivantara.avro.NumberOfDelaysRecord) defaultValue(fields()[0]);
        }
        if (CarriersBuilder != null) {
          try {
            record.Carriers = this.CarriersBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("Carriers"));
            throw e;
          }
        } else {
          record.Carriers = fieldSetFlags()[1] ? this.Carriers : (com.hitachivantara.avro.CarriersRecord) defaultValue(fields()[1]);
        }
        if (FlightsBuilder != null) {
          try {
            record.Flights = this.FlightsBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("Flights"));
            throw e;
          }
        } else {
          record.Flights = fieldSetFlags()[2] ? this.Flights : (com.hitachivantara.avro.FlightsRecord) defaultValue(fields()[2]);
        }
        if (MinutesDelayedBuilder != null) {
          try {
            record.MinutesDelayed = this.MinutesDelayedBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("MinutesDelayed"));
            throw e;
          }
        } else {
          record.MinutesDelayed = fieldSetFlags()[3] ? this.MinutesDelayed : (com.hitachivantara.avro.MinutesDelayedRecord) defaultValue(fields()[3]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<StatisticsRecord>
    WRITER$ = (org.apache.avro.io.DatumWriter<StatisticsRecord>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<StatisticsRecord>
    READER$ = (org.apache.avro.io.DatumReader<StatisticsRecord>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.NumberOfDelays.customEncode(out);

    this.Carriers.customEncode(out);

    this.Flights.customEncode(out);

    this.MinutesDelayed.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.NumberOfDelays == null) {
        this.NumberOfDelays = new com.hitachivantara.avro.NumberOfDelaysRecord();
      }
      this.NumberOfDelays.customDecode(in);

      if (this.Carriers == null) {
        this.Carriers = new com.hitachivantara.avro.CarriersRecord();
      }
      this.Carriers.customDecode(in);

      if (this.Flights == null) {
        this.Flights = new com.hitachivantara.avro.FlightsRecord();
      }
      this.Flights.customDecode(in);

      if (this.MinutesDelayed == null) {
        this.MinutesDelayed = new com.hitachivantara.avro.MinutesDelayedRecord();
      }
      this.MinutesDelayed.customDecode(in);

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.NumberOfDelays == null) {
            this.NumberOfDelays = new com.hitachivantara.avro.NumberOfDelaysRecord();
          }
          this.NumberOfDelays.customDecode(in);
          break;

        case 1:
          if (this.Carriers == null) {
            this.Carriers = new com.hitachivantara.avro.CarriersRecord();
          }
          this.Carriers.customDecode(in);
          break;

        case 2:
          if (this.Flights == null) {
            this.Flights = new com.hitachivantara.avro.FlightsRecord();
          }
          this.Flights.customDecode(in);
          break;

        case 3:
          if (this.MinutesDelayed == null) {
            this.MinutesDelayed = new com.hitachivantara.avro.MinutesDelayedRecord();
          }
          this.MinutesDelayed.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










